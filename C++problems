Question 1:

#include <iostream>

class BankAccount {
private:
    double balance;

public:
    BankAccount() {
        balance = 0.0;
    }

    BankAccount(double initialBalance) {
        balance = initialBalance;
    }

    void deposit(double amount) {
        balance += amount;
    }

    void withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
        } else {
            std::cout << "Error: Insufficient funds." << std::endl;
        }
    }

    double getBalance() const {
        return balance;
    }
};

int main() {
    
    BankAccount account;

    
    account.deposit(1000);
    account.withdraw(500);
    std::cout << "Account balance: $" << account.getBalance() << std::endl;

    balance
    account.deposit(1000);
    account.withdraw(1500);

    return 0;
}







Question 2:

#include <iostream>

class Stack {
private:
    static const int MAX_SIZE = 100;
    int arr[MAX_SIZE];
    int top;

public:
    Stack() : top(-1) {}

    void push(int element) {
        if (top >= MAX_SIZE - 1) {
            std::cout << "Stack is full. Cannot push element." << std::endl;
            return;
        }
        arr[++top] = element;
        std::cout << "Pushed element: " << element << std::endl;
    }

    void pop() {
        if (isEmpty()) {
            std::cout << "Stack is empty. Cannot pop element." << std::endl;
            return;
        }
        int poppedElement = arr[top--];
        std::cout << "Popped element: " << poppedElement << std::endl;
    }

    bool isEmpty() {
        return (top == -1);
    }
};

int main() {
    Stack stack;

    int choice;
    int element;

    do {
        std::cout << "\nStack Operations:" << std::endl;
        std::cout << "1. Push" << std::endl;
        std::cout << "2. Pop" << std::endl;
        std::cout << "3. Exit" << std::endl;
        std::cout << "Enter your choice: ";
        std::cin >> choice;

        switch (choice) {
            case 1:
                std::cout << "Enter element to push: ";
                std::cin >> element;
                stack.push(element);
                break;
            case 2:
                stack.pop();
                break;
            case 3:
                std::cout << "Exiting program..." << std::endl;
                break;
            default:
                std::cout << "Invalid choice. Please try again." << std::endl;
        }
    } while (choice != 3);

    return 0;
}
